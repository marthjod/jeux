#%RAML 0.8
---
# RAML (RESTful API Modeling Language) specification for Jeux.
#
# Cf. http://raml.org and https://github.com/raml-org/raml-spec
# for further information.

title: Jeux REST API
version: v1
baseUri: http://localhost:8080/JeuxWeb

/rest/v1:
    /status:
        get:
            description: |
                Get current API status ("ping" it).
            mediaType: text/plain
            responses:
                200:
                    body:
                        text/plain:
                            "OK"
                    description: |
                        All's well.
                        
/rest/v1:
    /games:
        get:
            description: |
                Get all games from DB.
            mediaType: application/json
            responses:
                200:
                    body:
                        application/json
                500
                
/rest/v1:
    /roundswitchrules:
        get:
            description: |
                Get all round-switch rules from DB.
            mediaType: application/json
            responses:
                200:
                    body:
                        application/json
                500

/rest/v1:
    /groups:
        get:
            description: |
                Get all groups from DB.
            mediaType: application/json
            responses:
                200:
                    body:
                        application/json:
                            example: |
                                [
                                   {
                                      "id":1,
                                      "name":"Some test group",
                                      "roundId":1,
                                      "minSets":1,
                                      "maxSets":1,
                                      "active":true,
                                      "completed":false
                                   },
                                   {
                                      "id":2,
                                      "name":"Sweede Grubbe",
                                      "roundId":1,
                                      "minSets":2,
                                      "maxSets":3,
                                      "active":true,
                                      "completed":false
                                   }
                               ]

/rest/v1:
    /delete-group/{groupId}:
        delete:
            description: |
                Delete DB entry for group with given ID = {groupId}.

/rest/v1:
    /create-group:
        put:
            description: |
                Send data representing a group object to be created on the server.
            body:
                application/json:
                    example: |
                        {
                            maxSets:"3",
                            minSets:"2",
                            name:"Nuevo grupo",
                            round:"1",
                            active:true,
                            completed:false
                        }
             responses:
                201:
                    description: |
                        Group object has been successfully created on the server.
                500:
                    description: |
                        Failure to create group object server-side.

/rest/v1:
    /create-player:
        put:
            description: |
                Send data representing player object to be created on the server.
            body:
                application/json:
                    example: |
                       {
                          "name":"Player Two",
                          "groupId":2
                       },
            responses:
                201:
                    description: |
                        Player object has been successfully created on the server.
                500:
                    description: |
                        Failure to create player object server-side.

/rest/v1:
    /create-roundswitchrule:
        put:
            description: |
                Send data representing a round-switch rule to server.
            body:
                application/json:
                    example: |
                        {
                            "srcGroupId":1,
                            "destGroupId":4,
                            "startWithRank":1,
                            "additionalPlayers":1
                        },
                    responses:
                        201:
                            description: |
                                Rule object has been successfully created on the server.
                        500:
                            description: |
                                Failure to create round-switch server-side.
